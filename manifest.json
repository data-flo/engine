{
  "add-column": {
    "description": "Adds a new column to an existing datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable to which the new column will be added.",
        "required": true
      },
      {
        "name": "column name",
        "type": "text",
        "description": "The name of the new column to be added.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "value",
        "type": "text",
        "description": "A value to be added to the column cells.\nIf unspecified, empty values will be added.",
        "required": false,
        "default": ""
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the new column added."
      }
    ],
    "name": "add-column"
  },
  "aggregate-rows": {
    "description": "Aggregates values in specified columns grouped by rows.",
    "group": "Data Manipulation",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable to be aggregated.",
        "required": true
      },
      {
        "name": "group column names",
        "type": "list",
        "description": "The names of the columns containing values to be grouped.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "aggregations",
        "type": "map",
        "description": "A map of column names with aggregation method, where the keys are the column names, and the values should be either `max`, `mean`, `median`, `min`, `mode`, `sum`, `unique` (distinct).",
        "required": true,
        "ui": {
          "keys": {
            "column-in": "data"
          },
          "values": {
            "must-be-one-of": [
              [
                "max",
                "Max"
              ],
              [
                "mean",
                "Mean"
              ],
              [
                "median",
                "Median"
              ],
              [
                "min",
                "Min"
              ],
              [
                "mode",
                "Mode"
              ],
              [
                "sum",
                "Sum"
              ],
              [
                "unique",
                "Unique (distinct)"
              ]
            ]
          }
        }
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with aggregated data."
      }
    ],
    "name": "aggregate-rows"
  },
  "append-datatables": {
    "description": "Appends the rows of two datatables into a new datatable based on common column names.",
    "group": "Data Tables",
    "input": [
      {
        "name": "first data",
        "type": "datatable",
        "description": "The first datatable.",
        "required": true
      },
      {
        "name": "second data",
        "type": "datatable",
        "description": "The second datatable.",
        "required": true
      },
      {
        "name": "exclude unmatched columns",
        "type": "boolean",
        "description": "Specifies whether to exclude columns which do not exist in both datatables.\nIf unspecified, defaults to `False` (all columns from both datatable will be included).",
        "required": false,
        "default": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing rows from both datatables."
      }
    ],
    "name": "append-datatables"
  },
  "append-lists": {
    "description": "Appends two lists into one.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "first list",
        "type": "list",
        "description": "The first list to be merged.",
        "required": true
      },
      {
        "name": "second list",
        "type": "list",
        "description": "The second list to be merged.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list containing values from both lists."
      }
    ],
    "name": "append-lists"
  },
  "append-to-list": {
    "description": "Adds a text value to the end of a list.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list to which the values will be appended.",
        "required": true
      },
      {
        "name": "value",
        "type": "text",
        "description": "The value to be appended to the list.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A new list with the value appended."
      }
    ],
    "name": "append-to-list"
  },
  "apply-force-directed-layout": {
    "description": "Applies a force-directed graph drawing algorithm (https://en.wikipedia.org/wiki/Force-directed_graph_drawing) on a specified graph.",
    "group": "Graph Manipulation",
    "input": [
      {
        "name": "graph",
        "type": "graph",
        "description": "The graph structure.",
        "required": true
      },
      {
        "name": "stiffness",
        "type": "number",
        "description": "Defaults to 400.0.",
        "required": false,
        "default": 400
      },
      {
        "name": "repulsion",
        "type": "number",
        "description": "How much each node should node push each other away.\nIf unspecified, defaults to 400.0.",
        "required": false,
        "default": 400
      },
      {
        "name": "damping",
        "type": "number",
        "description": "The amount to lessen the force to be applied.\nIf unspecified, defaults to 0.5.",
        "required": false,
        "default": 0.5
      },
      {
        "name": "min energy threshold",
        "type": "number",
        "description": "The minimum amount of force that should be applied.\nIf unspecified, defaults to null.",
        "required": false,
        "default": null
      },
      {
        "name": "max speed",
        "type": "number",
        "description": "The maximum amount of speed that should be applied.\nIf unspecified, defaults to null.",
        "required": false,
        "default": null
      }
    ],
    "output": [
      {
        "name": "graph",
        "type": "graph",
        "description": "A force-directed graph drawing."
      }
    ],
    "name": "apply-force-directed-layout"
  },
  "calculate-time-difference": {
    "description": "Calculates the time difference (in a specified unit of measurement) between two datatable columns (column one - column two).",
    "group": "Data Manipulation",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing two date/time columns.",
        "required": true
      },
      {
        "name": "column one",
        "type": "text",
        "description": "The name of the column containing reference date/time values.",
        "required": true
      },
      {
        "name": "column one format",
        "type": "text",
        "description": "The format of data in column one based on Unicode Technical Standard #35: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table.\nDefaults to ISO 8601 date/time.",
        "required": false,
        "default": "yyyy-MM-dd'T'HH:mm:ssxxx",
        "ui": {
          "can-be-one-of": [
            [
              "yyyy-MM-dd'T'HH:mm:ssxxx",
              "ISO 8601 date and time + timezone (e.g. 2022-06-30T16:20:34+00:00)"
            ],
            [
              "yyyy-MM-dd'T'HH:mm:ss'Z'",
              "ISO 8601 date and time in UTC (e.g. 2022-06-30T16:20:34Z)"
            ],
            [
              "yyyy-MM-dd",
              "ISO 8601 date without time (e.g. 2022-06-30)"
            ],
            [
              "dd/MM/yyyy",
              "date/month/year (e.g. 30/06/2022)"
            ],
            [
              "MM/dd/yyyy",
              "month/date/year (e.g. 06/30/2022)"
            ],
            [
              "yyyy/MM/dd",
              "year/month/date (e.g. 06/30/2022)"
            ],
            [
              "dd.MM.yyyy",
              "date.month.year (e.g. 30.06.2022)"
            ],
            [
              "dd MMM yyyy",
              "date month year (e.g. 30 Jun 2022)"
            ],
            [
              "HH:mm",
              "24-hour time (e.g. 16:20)"
            ],
            [
              "hh:mm",
              "12-hour time (e.g. 04:20 pm)"
            ]
          ]
        }
      },
      {
        "name": "column two",
        "type": "text",
        "description": "The name of the column containing date/time values.",
        "required": true
      },
      {
        "name": "column two format",
        "type": "text",
        "description": "The format of data in value column based on Unicode Technical Standard #35: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table.\nDefaults to ISO 8601 date/time.",
        "required": false,
        "default": "yyyy-MM-dd'T'HH:mm:ssxxx",
        "ui": {
          "can-be-one-of": [
            [
              "yyyy-MM-dd'T'HH:mm:ssxxx",
              "ISO 8601 date and time + timezone (e.g. 2022-06-30T16:20:34+00:00)"
            ],
            [
              "yyyy-MM-dd'T'HH:mm:ss'Z'",
              "ISO 8601 date and time in UTC (e.g. 2022-06-30T16:20:34Z)"
            ],
            [
              "yyyy-MM-dd",
              "ISO 8601 date without time (e.g. 2022-06-30)"
            ],
            [
              "dd/MM/yyyy",
              "date/month/year (e.g. 30/06/2022)"
            ],
            [
              "MM/dd/yyyy",
              "month/date/year (e.g. 06/30/2022)"
            ],
            [
              "yyyy/MM/dd",
              "year/month/date (e.g. 06/30/2022)"
            ],
            [
              "dd.MM.yyyy",
              "date.month.year (e.g. 30.06.2022)"
            ],
            [
              "dd MMM yyyy",
              "date month year (e.g. 30 Jun 2022)"
            ],
            [
              "HH:mm",
              "24-hour time (e.g. 16:20)"
            ],
            [
              "hh:mm",
              "12-hour time (e.g. 04:20 pm)"
            ]
          ]
        }
      },
      {
        "name": "difference column",
        "type": "text",
        "description": "The name of the new column containing time difference values.",
        "required": true
      },
      {
        "name": "difference unit",
        "type": "text",
        "description": "The unit of time measurement.\nDefaults to `days`.",
        "required": true,
        "default": "days",
        "ui": {
          "must-be-one-of": [
            "years",
            "quarter",
            "months",
            "weeks",
            "days",
            "hours",
            "minutes",
            "seconds",
            "milliseconds"
          ]
        }
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the new column added."
      }
    ],
    "keywords": [],
    "name": "calculate-time-difference"
  },
  "change-column-case": {
    "description": "Converts the case of text values in a datatable column.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the column to be converted.",
        "required": true
      },
      {
        "name": "column",
        "type": "text",
        "description": "The column to be converted.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "case",
        "type": "text",
        "description": "One of the supported case patterns.",
        "required": true,
        "ui": {
          "must-be-one-of": [
            [
              "camel",
              "camel case (`OfMice and men` → `ofMiceAndMen`)",
              "text with the separator denoted by the next word capitalised"
            ],
            [
              "capital",
              "capital case (`OfMice and men` → `Of Mice And Men`)",
              "space separated text with each word capitalised"
            ],
            [
              "constant",
              "constant case (`OfMice and men` → `OF_MICE_AND_MEN`)",
              "upper case text with an underscore between words"
            ],
            [
              "dot",
              "dot case (`OfMice and men` → `of.mice.and.men`)",
              "lower case string with a period between words"
            ],
            [
              "header",
              "header case (`OfMice and men` → `Of-Mice-And-Men`)",
              "dash separated string of capitalised words"
            ],
            [
              "hyphen",
              "hyphen case (`OfMice and men` → `of-mice-and-men`)",
              "lower cased string with dashes between words (same as kebab case)"
            ],
            [
              "kebab",
              "kebab case (`OfMice and men` → `of-mice-and-men`)",
              "lower cased string with dashes between words"
            ],
            [
              "lower",
              "lower case (`OfMice and men` → `ofmice and men`)",
              "text with all letters lower case"
            ],
            [
              "no",
              "no case (`OfMice and men` → `of mice and men`)",
              "lower cased string with spaces between words"
            ],
            [
              "param",
              "param case (`OfMice and men` → `of-mice-and-men`)",
              "lower cased string with dashes between words (same as kebab case)"
            ],
            [
              "pascal",
              "pascal case (`OfMice and men` → `OfMiceAndMen`)",
              "string of capitalised words without separators"
            ],
            [
              "path",
              "path case (`OfMice and men` → `of/mice/and/men`)",
              "lower case string with slashes between words"
            ],
            [
              "sentence",
              "sentence case (`OfMice and men` → `Of mice and men`)",
              "lower case with spaces between words and capitalised first letter"
            ],
            [
              "snake",
              "snake case (`OfMice and men` → `of_mice_and_men`)",
              "lower case string with underscores between words"
            ],
            [
              "sponge",
              "sponge case (`OfMice and men` → `oFmiCe anD mEN`)",
              "string with random capitalisation applied"
            ],
            [
              "swap",
              "swap case (`OfMice and men` → `oFmICE AND MEN`)",
              "swaps every character from upper to lower case, or lower to upper case"
            ],
            [
              "title",
              "title case (`OfMice and men` → `OfMice and Men`)",
              "a mixed-case style following English language rules"
            ],
            [
              "upper",
              "upper case (`OfMice and men` → `OFMICE AND MEN`)",
              "text with all letters upper case"
            ]
          ]
        }
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with target column added."
      }
    ],
    "name": "change-column-case"
  },
  "compare-columns": {
    "description": "Compares values in specified columns.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing columns to compare.",
        "required": true
      },
      {
        "name": "columns",
        "type": "list",
        "description": "A list of columns to be compared.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "case sensitive",
        "type": "boolean",
        "description": "Whether lowercase and uppercase letters should be treated as equivalent.\nDefaults to `False` (lowercase and uppercase letters are treated as equivalent).",
        "required": false,
        "default": false
      }
    ],
    "output": [
      {
        "name": "same",
        "type": "datatable",
        "description": "A datatable containing rows which have the same values in selected columns."
      },
      {
        "name": "different",
        "type": "datatable",
        "description": "A datatable containing rows which have different values in selected columns."
      }
    ],
    "name": "compare-columns"
  },
  "concatenate-columns": {
    "description": "Concatenate values from two or more columns",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the columns to be concatenated.",
        "required": true
      },
      {
        "name": "columns",
        "type": "list",
        "description": "A list of columns to be concatenated. The output value matches the listed order.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "separator",
        "type": "text",
        "description": "Specifies text to separate each concatenated value. Defaults to `\"\"` (blank).",
        "required": false,
        "default": ""
      },
      {
        "name": "concatenated column",
        "type": "text",
        "description": "The new column containing concatenated values.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the concatenated column added."
      }
    ],
    "name": "concatenate-columns"
  },
  "concatenate-text": {
    "description": "Concatenates two texts.",
    "group": "Text Manipulation",
    "input": [
      {
        "name": "text one",
        "type": "text",
        "description": "First text to be concatenated.",
        "required": true
      },
      {
        "name": "text two",
        "type": "text",
        "description": "Second text to be concatenated.",
        "required": true
      },
      {
        "name": "separator",
        "type": "text",
        "description": "Specifies text to separate the concatenated texts.\nIf unspecified, defaults to blank.",
        "required": false,
        "default": ""
      }
    ],
    "output": [
      {
        "name": "combination",
        "type": "text",
        "description": "The concatenated text."
      }
    ],
    "name": "concatenate-text"
  },
  "convert-date-to-text": {
    "description": "Converts a date/time value to text in a specified format.",
    "group": "Text Manipulation",
    "input": [
      {
        "name": "value",
        "type": "text",
        "description": "The input date/time value.\nIf unspecified, the current date/time will be used.",
        "required": false
      },
      {
        "name": "format",
        "type": "text",
        "description": "The format of data in column one based on Unicode Technical Standard #35: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table. \nDefaults to ISO 8601 date/time.",
        "required": false,
        "default": "yyyy-MM-dd'T'HH:mm:ssxxx",
        "ui": {
          "can-be-one-of": [
            [
              "yyyy-MM-dd'T'HH:mm:ssxxx",
              "ISO 8601 date and time + timezone (e.g. 2022-06-30T16:20:34+00:00)"
            ],
            [
              "yyyy-MM-dd'T'HH:mm:ss'Z'",
              "ISO 8601 date and time in UTC (e.g. 2022-06-30T16:20:34Z)"
            ],
            [
              "yyyy-MM-dd",
              "ISO 8601 date without time (e.g. 2022-06-30)"
            ],
            [
              "dd/MM/yyyy",
              "date/month/year (e.g. 30/06/2022)"
            ],
            [
              "MM/dd/yyyy",
              "month/date/year (e.g. 06/30/2022)"
            ],
            [
              "yyyy/MM/dd",
              "year/month/date (e.g. 06/30/2022)"
            ],
            [
              "dd.MM.yyyy",
              "date.month.year (e.g. 30.06.2022)"
            ],
            [
              "dd MMM yyyy",
              "date month year (e.g. 30 Jun 2022)"
            ],
            [
              "HH:mm",
              "24-hour time (e.g. 16:20)"
            ],
            [
              "hh:mm",
              "12-hour time (e.g. 04:20 pm)"
            ]
          ]
        }
      },
      {
        "name": "locale",
        "type": "text",
        "description": "A language locale to be used when formatting the values.\nSee https://date-fns.org/v2.28.0/docs/Locale.\nIf unspecified, it defaults to `en-US`.",
        "required": false,
        "default": "en-US",
        "ui": {
          "must-be-one-of": [
            "af",
            "ar",
            "ar-DZ",
            "ar-EG",
            "ar-MA",
            "ar-SA",
            "ar-TN",
            "az",
            "be",
            "bg",
            "bn",
            "bs",
            "ca",
            "cs",
            "cy",
            "da",
            "de",
            "de-AT",
            "el",
            "en-AU",
            "en-CA",
            "en-GB",
            "en-IE",
            "en-IN",
            "en-NZ",
            "en-US",
            "en-ZA",
            "eo",
            "es",
            "et",
            "eu",
            "fa-IR",
            "fi",
            "fr",
            "fr-CA",
            "fr-CH",
            "fy",
            "gd",
            "gl",
            "gu",
            "he",
            "hi",
            "hr",
            "ht",
            "hu",
            "hy",
            "id",
            "is",
            "it",
            "ja",
            "ja-Hira",
            "ka",
            "kk",
            "km",
            "kn",
            "ko",
            "lb",
            "lt",
            "lv",
            "mk",
            "mn",
            "ms",
            "mt",
            "nb",
            "nl",
            "nl-BE",
            "nn",
            "pl",
            "pt",
            "pt-BR",
            "ro",
            "ru",
            "sk",
            "sl",
            "sq",
            "sr",
            "sr-Latn",
            "sv",
            "ta",
            "te",
            "th",
            "tr",
            "ug",
            "uk",
            "uz",
            "uz-Cyrl",
            "vi",
            "zh-CN",
            "zh-HK",
            "zh-TW"
          ]
        }
      },
      {
        "name": "timezone",
        "type": "text",
        "description": "The three letter code of the timezone (e.g. UTC).",
        "required": false,
        "default": "UTC"
      }
    ],
    "output": [
      {
        "name": "text",
        "type": "text",
        "description": "The date as a formatted text."
      }
    ],
    "name": "convert-date-to-text"
  },
  "convert-list-to-datatable": {
    "description": "Converts a list to a single-column datatable.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list to be converted to a datatable.",
        "required": true
      },
      {
        "name": "column name",
        "type": "text",
        "description": "The name of the datatable column containing the list.\nIf unspecified, defaults to `value`.",
        "required": false,
        "default": "value"
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A single-column datatable containing the list values."
      }
    ],
    "name": "convert-list-to-datatable"
  },
  "convert-text-to-datatable": {
    "description": "Converts delimited text (e.g. comma-separated values) to a datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "csv",
        "type": "text",
        "description": "The text to be converted to datatable.",
        "required": true
      },
      {
        "name": "delimiter",
        "type": "text",
        "description": "Character used as column delimiter.\nIf unspecified, defaults to \",\" (comma).",
        "required": false,
        "default": ",",
        "ui": {
          "can-be-one-of": [
            [
              ",",
              "Comma (`,`)"
            ],
            [
              ";",
              "Semicolon (`;`)"
            ],
            [
              ":",
              "Colon (`:`)"
            ],
            [
              "|",
              "Vertical bar (``)"
            ],
            [
              "\\u0020",
              "Space"
            ],
            [
              "\\u0009",
              "tab"
            ]
          ]
        }
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable."
      }
    ],
    "name": "convert-text-to-datatable"
  },
  "convert-text-to-list": {
    "description": "Converts a text into a list by spliting it using a specified separator to determine where to make each split.",
    "group": "Text Manipulation",
    "input": [
      {
        "name": "text",
        "type": "text",
        "description": "The text to be converted.",
        "required": true
      },
      {
        "name": "separator",
        "type": "text",
        "description": "The separator text, or regular expression, which denotes the points at which each split should occur. \nThe separator is treated as a regular expression if it begins and ends with `/`.\nIf unspecified, defaults to `\n` (newline).",
        "required": false,
        "default": "\n"
      },
      {
        "name": "limit",
        "type": "number",
        "description": "A positive integer specifying a limit on the number of splits to be found.\nIf unspecified, defaults to `null` (no limit).",
        "required": false,
        "ui": {
          "integer": true
        }
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list of texts split at each point where the separator occurs in the input text, or an empty list if no occurrences found."
      }
    ],
    "name": "convert-text-to-list"
  },
  "create-google-drive-folder": {
    "description": "Creates a sub folder in a parent folder in Google Drive.\nThe parent folder should be either public or shared with `data-flo@data-flo.iam.gserviceaccount.com`, and given `can edit` permission.",
    "group": "Data Destinations",
    "input": [
      {
        "name": "parent folder",
        "type": "text",
        "description": "The URL of the parent folder in Google Drive.",
        "required": true,
        "ui": {
          "type": "url"
        }
      },
      {
        "name": "folder name",
        "type": "text",
        "description": "The name of the folder to be created.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "url",
        "type": "text",
        "description": "The Google Drive URL of the created folder."
      },
      {
        "name": "id",
        "type": "text",
        "description": "The ID of the created folder."
      }
    ],
    "name": "create-google-drive-folder"
  },
  "create-graph-from-datatable": {
    "description": "Creates a graph structure from a datatable containing edge data.",
    "group": "Graph Manipulation",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing edge data.",
        "required": true
      },
      {
        "name": "from column",
        "type": "text",
        "description": "The name of the column containing the origin node of the edge.",
        "required": true
      },
      {
        "name": "to column",
        "type": "text",
        "description": "The name of the column containing the destination node of the edge.",
        "required": true
      },
      {
        "name": "directed",
        "type": "boolean",
        "description": "Specifies whether the graph is directed or not.\nIf unspecified, defaults to `False`.",
        "required": false,
        "default": false
      }
    ],
    "output": [
      {
        "name": "graph",
        "type": "graph",
        "description": "A graph structure defining nodes and edges."
      }
    ],
    "name": "create-graph-from-datatable"
  },
  "create-graph-from-dot": {
    "description": "Creates a graph structure from text in DOT language format.",
    "group": "Graph Manipulation",
    "input": [
      {
        "name": "dot",
        "type": "text",
        "description": "The text in DOT language format.\n See: https://en.wikipedia.org/wiki/DOT_(graph_description_language).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "graph",
        "type": "graph",
        "description": "A graph structure defining nodes and edges."
      }
    ],
    "name": "create-graph-from-dot"
  },
  "create-list-from-datatable": {
    "description": "Creates a list from values of a datatable column.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the column values.",
        "required": true
      },
      {
        "name": "column name",
        "type": "text",
        "description": "The name of the column from which the list will be created.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list containing the values from the datatable column."
      }
    ],
    "name": "create-list-from-datatable"
  },
  "create-map-from-datatable": {
    "description": "Creates a map from a datatable.",
    "group": "Map Manipulation",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing key-value pairs.",
        "required": true
      },
      {
        "name": "key column",
        "type": "text",
        "description": "The name of the column which contains keys.\nIf unspecified, defaults to `key`.",
        "required": true,
        "default": "key"
      },
      {
        "name": "value column",
        "type": "text",
        "description": "The name of the column which contains values.\nIf unspecified, defaults to `value`.",
        "required": true,
        "default": "value"
      }
    ],
    "output": [
      {
        "name": "map",
        "type": "map",
        "description": "A map containing key-value pairs."
      }
    ],
    "name": "create-map-from-datatable"
  },
  "create-text-from-template": {
    "description": "Creates text using a Mustache template (https://mustache.github.io/).",
    "group": "Text Manipulation",
    "input": [
      {
        "name": "template",
        "type": "text",
        "description": "The Mustache template text that contains any number of Mustache variable tags. Variable tags are indicated by the double mustaches that surround them, e.g. `{{ person }}` is a tag.",
        "required": true
      },
      {
        "name": "variables",
        "type": "map",
        "description": "A map of variable names (map keys) with values (map values).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "text",
        "type": "text",
        "description": "The rendered text."
      }
    ],
    "name": "create-text-from-template"
  },
  "duplicate-column": {
    "description": "Duplicates a column in a datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the column to be duplicated.",
        "required": true
      },
      {
        "name": "column name",
        "type": "text",
        "description": "The name of the column to be duplicated.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "new column name",
        "type": "text",
        "description": "The name of the new column.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the duplicated column."
      }
    ],
    "name": "duplicate-column"
  },
  "export-file-to-google-drive": {
    "description": "Exports a file to a folder on Google Drive.\nThe folder should be shared with `data-flo@data-flo.iam.gserviceaccount.com` and given `can edit` permission.",
    "group": "Data Destinations",
    "input": [
      {
        "name": "file",
        "type": "file",
        "description": "The file to be exported.",
        "required": true
      },
      {
        "name": "file url",
        "type": "text",
        "description": "The URL of an existing file on Google Drive to be updated. Leave empty to create a new file.",
        "required": false
      },
      {
        "name": "folder url",
        "type": "text",
        "description": "The URL of the destination folder on Google Drive. Leave empty when updating a file.",
        "required": false
      },
      {
        "name": "output file name",
        "type": "text",
        "description": "The name of the file to be on Google Drive.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "url",
        "type": "text",
        "description": "The Google Drive URL of the exported file."
      },
      {
        "name": "id",
        "type": "text",
        "description": "The Google Drive ID of the exported file."
      }
    ],
    "name": "export-file-to-google-drive"
  },
  "export-file-to-smb-share": {
    "description": "Exports a file to a shared network drive using standard SMB/CIFS protocol.",
    "group": "Data Destinations",
    "input": [
      {
        "name": "file",
        "type": "file",
        "description": "The file to be exported.",
        "required": true
      },
      {
        "name": "share address",
        "type": "text",
        "description": "The name of the service to which you want to connect.\nTakes the form of `\\\\server\\service`, `//server/service`, or `smb://server/service` where `server` is the host name or IP address of the SMB/CIFS server, and `service` is the name of the service offered by the server.",
        "required": true
      },
      {
        "name": "port",
        "type": "number",
        "description": "The port of the SMB server.\nDefaults to `445`.",
        "required": true,
        "default": 445
      },
      {
        "name": "domain",
        "type": "text",
        "description": "the domain of which the user is registered.\ne.g. `WORKGROUP`.",
        "required": false
      },
      {
        "name": "username",
        "type": "text",
        "description": "The username required to access the specified service on the server.\nIf unspecified, defaults to `guest`.",
        "required": false,
        "default": ""
      },
      {
        "name": "password",
        "type": "text",
        "description": "The password required to access the specified service on the server.",
        "required": false,
        "default": ""
      },
      {
        "name": "file path",
        "type": "text",
        "description": "The relative path (e.g. `folder\\file.txt`) or the absolute path (e.g. `\\\\server\\service\\folder\\file.txt`) of the destination file.",
        "required": true
      },
      {
        "name": "overwrite",
        "type": "boolean",
        "description": "Specifies whether to overwrite any existing file.\nIf unspecified, defaults to `False`.",
        "required": false,
        "default": false
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "The exported file."
      }
    ],
    "name": "export-file-to-smb-share"
  },
  "export-graph-to-dot-file": {
    "description": "Exports a graph as a text file in DOT format (https://en.wikipedia.org/wiki/DOT_(graph_description_language)).",
    "group": "Graph Manipulation",
    "input": [
      {
        "name": "graph",
        "type": "graph",
        "description": "The graph structure to be exported.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "dot",
        "type": "text",
        "description": "A text file in DOT format (`.dot`)."
      }
    ],
    "name": "export-graph-to-dot-file"
  },
  "export-to-csv-file": {
    "description": "Exports a datatable to a CSV file.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable to be exported.",
        "required": true
      },
      {
        "name": "delimiter",
        "type": "text",
        "description": "Character used as column delimiter. Defaults to \",\" (comma).",
        "required": false,
        "default": ",",
        "ui": {
          "can-be-one-of": [
            [
              ",",
              "Comma (`,`)"
            ],
            [
              ";",
              "Semicolon (`;`)"
            ],
            [
              ":",
              "Colon (`:`)"
            ],
            [
              "|",
              "Vertical bar (``)"
            ],
            [
              "\\u0020",
              "Space"
            ],
            [
              "\\u0009",
              "tab"
            ]
          ]
        }
      },
      {
        "name": "columns",
        "type": "list",
        "description": "A list of columns to be exported to the CSV file.\nIf unspecified, all columns will be exported.",
        "required": false
      },
      {
        "name": "output file name",
        "type": "text",
        "description": "The name of the output file.\nIf unspecified, defaults to `data.csv`.",
        "required": false,
        "default": "data.csv"
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "A file in CSV format."
      }
    ],
    "name": "export-to-csv-file"
  },
  "export-to-dbf-file": {
    "description": "Exports a datatable as a dBase database file (https://en.wikipedia.org/wiki/.dbf).",
    "group": "Data Destinations",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "Data to be imported."
      },
      {
        "name": "column types",
        "type": "map",
        "description": "A map of column name to data type."
      },
      {
        "name": "output file name",
        "type": "text",
        "description": "The name of the file to create.\nIf unspecified, defaults to `file.dbf`.",
        "default": "file.dbf"
      }
    ],
    "output": [
      {
        "name": "dbf",
        "type": "file",
        "description": "Exported file DBF format"
      }
    ],
    "name": "export-to-dbf-file"
  },
  "export-to-google-sheet": {
    "description": "Exports data to an existing Google Sheets spreadsheet.\nPrivate spreadsheets should be shared with `data-flo@data-flo.iam.gserviceaccount.com` and given `can edit` permission.",
    "group": "Data Destinations",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The data to be exported to the Google Sheets.",
        "required": true
      },
      {
        "name": "url",
        "type": "text",
        "description": "A valid URL of a Google Spreadsheet to be updated.\nThe Spreadsheet should be shared with `data-flo@data-flo.iam.gserviceaccount.com` and given `can edit` permission.",
        "required": true
      },
      {
        "name": "sheet name",
        "type": "text",
        "description": "The title of the sheet (tab) to which data will be exported.\nIf unspecified, the first sheet in the spreadsheet will be used.",
        "required": false
      },
      {
        "name": "header row",
        "type": "number",
        "description": "The row number of the sheet row which contains column headers.\nIf unspecified, it defaults to `1` (the first row).",
        "required": false,
        "default": 1
      },
      {
        "name": "id column",
        "type": "text",
        "description": "The name of the column that contains the unique row IDs shared by `data` and the Google Sheets spreadsheet.",
        "required": true
      },
      {
        "name": "append rows",
        "type": "boolean",
        "description": "When set to `False, only existing rows will be updated. When set to `True`, existing rows will be updated and new (non-existing) rows will be added to the end of the Google Sheets spreadsheet.\nIf unspecified, defaults to `True`.",
        "required": false,
        "default": true
      },
      {
        "name": "append columns",
        "type": "boolean",
        "description": "When set to `False, only existing columns will be updated. When set to `True`, existing columns will be updated and new (non-existing) columns will be added to the end of the Google Sheets spreadsheet.\nIf unspecified, defaults to `True`.",
        "required": false,
        "default": true
      },
      {
        "name": "resize sheet",
        "type": "boolean",
        "description": "Specifies whether to resize the Google Sheets spreadsheet when more rows and columns are needed.\nIf unspecified, defaults to `True`.",
        "required": false,
        "default": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The data exported to the Google Sheets spreadsheet."
      },
      {
        "name": "updated row ids",
        "type": "list",
        "description": "A list of existing row IDs which have been updated."
      },
      {
        "name": "created row ids",
        "type": "list",
        "description": "A list of new row IDs which have been created when `append rows` is set to `True`."
      },
      {
        "name": "skipped row ids",
        "type": "list",
        "description": "A list of row IDs which in `data` which are missing from the Google Sheets spreadsheet when `append rows` is set to `False`."
      }
    ],
    "name": "export-to-google-sheet"
  },
  "export-to-microreact-project": {
    "description": "Creates a new project or updates an existing a project on a Microreact server.",
    "group": "Data Destinations",
    "input": [
      {
        "name": "project",
        "type": "text",
        "description": "The ID (e.g. `fCXBPv48KNkm5oZq8UWdHG`) or the URL (e.g. `https://microreact.org/project/fCXBPv48KNkm5oZq8UWdHG`) of an existing project to be updated. Leave empty to create a new project.",
        "required": false
      },
      {
        "name": "name",
        "type": "text",
        "description": "The new project name.\nIf unspecified, defaults to existing project name if there is one, otherwise defaults to `Unnamed project`.",
        "required": false,
        "default": "Unnamed project"
      },
      {
        "name": "description",
        "type": "text",
        "description": "An optional project description in Markdown format.",
        "required": false,
        "default": ""
      },
      {
        "name": "data file",
        "type": "file",
        "description": "A data file in one of the supported formats: https://docs.microreact.org/instructions/creating-a-microreact-project/supported-file-formats#data-file-formats.\nLeave empty if using `data url`.",
        "required": false
      },
      {
        "name": "data url",
        "type": "text",
        "description": "URL linking to a data file in one of the supported formats: https://docs.microreact.org/instructions/creating-a-microreact-project/supported-file-formats#data-file-formats.\nLeave empty if using `data file`.",
        "required": false
      },
      {
        "name": "tree file",
        "type": "file",
        "description": "A phylogenetic tree file in Newick format.\nLeave empty if using `tree url`.",
        "required": false
      },
      {
        "name": "tree url",
        "type": "text",
        "description": "URL linking to a tree file in Newick format.\nLeave empty if using `tree file`.",
        "required": false
      },
      {
        "name": "network file",
        "type": "file",
        "description": "A network file in DOT format.\nLeave empty if using `network url`.",
        "required": false
      },
      {
        "name": "network url",
        "type": "text",
        "description": "URL linking to a network file in DOT format.\nLeave empty if using `network file`.",
        "required": false
      },
      {
        "name": "server api",
        "type": "text",
        "description": "The URL of the Microreact server on which the project will be created or updated.\nIf unspecified, defaults to `https://microreact.org/`.",
        "required": false,
        "default": "https://microreact.org/api/"
      },
      {
        "name": "access token",
        "type": "text",
        "description": "The API access token for a Microreact account.\nSee https://docs.microreact.org/api/access-tokens.",
        "required": true
      },
      {
        "name": "id column",
        "type": "text",
        "description": "The column name in `data` that will be used as the unique row ID.\nIf unspecified, defaults to `id`.",
        "required": false
      },
      {
        "name": "timeline column",
        "type": "text",
        "description": "The column name which contains the timeline data.\nIf unspecified, no timeline will be added when creating a new project.",
        "required": false
      },
      {
        "name": "latitude column",
        "type": "text",
        "description": "The column name which contains map latitude values.\nIf unspecified, no map will be added when creating a new project.",
        "required": false
      },
      {
        "name": "longitude column",
        "type": "text",
        "description": "The column name which contains map longitude values.\nIf unspecified, no map will be added when creating a new project.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "id",
        "type": "text",
        "description": "The ID of the Microreact project."
      },
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the Microreact project."
      }
    ],
    "name": "export-to-microreact-project"
  },
  "export-to-sqlite-file": {
    "description": "Exports a datatable to a SQLite DB file.",
    "group": "Data Destinations",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable to be exported."
      },
      {
        "name": "table name",
        "type": "text",
        "description": "The name of the SQLite table to which the data will be exported."
      },
      {
        "name": "id column name",
        "type": "text",
        "description": "The name of the column which contains unique row IDs.",
        "default": null
      }
    ],
    "output": [
      {
        "name": "sqlite",
        "type": "file",
        "description": "A file in SQLite format with the exported data."
      }
    ],
    "name": "export-to-sqlite-file"
  },
  "filter-list": {
    "description": "Finds values in a list that match a pattern.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list to be filtered.",
        "required": true
      },
      {
        "name": "pattern",
        "type": "text",
        "description": "A text or a regular expression to be searched for within the list.\nRegular expressions must be wrapped with / character (e.g. /.*/).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "values",
        "type": "list",
        "description": "A list with the values that match the testing pattern."
      },
      {
        "name": "complementary",
        "type": "list",
        "description": "A list with the values that do not match the testing pattern."
      }
    ],
    "name": "filter-list"
  },
  "filter-rows": {
    "description": "Finds rows in a datatable that match a search pattern.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable to be searched.",
        "required": true
      },
      {
        "name": "column name",
        "type": "text",
        "description": "The name of column in the datatable to be searched.",
        "required": true
      },
      {
        "name": "filter type",
        "type": "text",
        "description": "The type of filter applied.",
        "required": false,
        "default": "equals",
        "ui": {
          "must-be-one-of": [
            [
              "is-blank",
              "Value is blank"
            ],
            [
              "not-blank",
              "Value is not blank"
            ],
            [
              "equals",
              "Text is equal to"
            ],
            [
              "not-equals",
              "Text is not equal to"
            ],
            [
              "includes",
              "Text contains"
            ],
            [
              "excludes",
              "Text does not contain"
            ],
            [
              "starts-with",
              "Text starts with"
            ],
            [
              "not-starts-with",
              "Text does not start with"
            ],
            [
              "ends-with",
              "Text ends with"
            ],
            [
              "not-ends-with",
              "Text does not end with"
            ],
            [
              "regex",
              "Text matches a regular expression"
            ],
            [
              "not-regex",
              "Text does not match a regular expression"
            ],
            [
              "greater-than",
              "Number is greater than"
            ],
            [
              "greater-than-or-equal",
              "Number is greater than or equal to"
            ],
            [
              "less-than",
              "Number is less than"
            ],
            [
              "less-than-or-equal",
              "Number is less than or equal to"
            ],
            [
              "between",
              "Number is between"
            ],
            [
              "not-between",
              "Number is not between"
            ],
            [
              "equals",
              "Number is equal to"
            ],
            [
              "not-equals",
              "Number is not equal to"
            ],
            [
              "is-number",
              "Value is a number"
            ],
            [
              "not-number",
              "Value is not a number"
            ]
          ]
        }
      },
      {
        "name": "filter value",
        "type": "text",
        "description": "A text or a regular expression to be searched for within the datatable columns.",
        "required": true
      },
      {
        "name": "case sensitive",
        "type": "boolean",
        "description": "When set to `True`, lowercase and uppercase letters are treated as different when comparing text values. When set to `False`, lowercase and uppercase letters are treated as equivalent, and `first data` column names will be used in the output datatable.\nIf unspecified, defaults to `True`",
        "required": false,
        "default": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the rows that match the testing pattern."
      },
      {
        "name": "complementary",
        "type": "datatable",
        "description": "A datatable with the rows that do not match the testing pattern."
      }
    ],
    "name": "filter-rows"
  },
  "find-value-in-list": {
    "description": "Finds a value in a list that matches a search pattern.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list to be searched.",
        "required": true
      },
      {
        "name": "pattern",
        "type": "text",
        "description": "A text or a regular expression to be searched for within the list.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "value",
        "type": "text",
        "description": "The value of the first match in the list."
      },
      {
        "name": "index",
        "type": "number",
        "description": "The one-based index of first match in the list."
      }
    ],
    "name": "find-value-in-list"
  },
  "find-value-in-map": {
    "description": "Finds a key in a map and returns the associated value.",
    "group": "Map Manipulation",
    "input": [
      {
        "name": "map",
        "type": "map",
        "description": "The map to lookup the key-value pair.",
        "required": true
      },
      {
        "name": "key",
        "type": "text",
        "description": "The key to be found.",
        "required": true
      },
      {
        "name": "default value",
        "type": "text",
        "description": "A value to be returned if `key` is not found in `map`.\nIf unspecified, no value will be returned.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "value",
        "type": "text",
        "description": "The value in `map` associated to `key` if found, otherwise `default value` will be returned."
      }
    ],
    "name": "find-value-in-map"
  },
  "format-date-column": {
    "description": "Formats date/time values in a datatable column.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the column to be formatted.",
        "required": true
      },
      {
        "name": "original column name",
        "type": "text",
        "description": "The name of the column containing the date/time values.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "original format",
        "type": "text",
        "description": "The format tokens, of the original values, based on Unicode Technical Standard #35.\nSee: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table.\nIf unspecified, defaults to ISO 8601 date/time.",
        "required": false,
        "default": "yyyy-MM-dd'T'HH:mm:ssxxx",
        "ui": {
          "can-be-one-of": [
            [
              "yyyy-MM-dd'T'HH:mm:ssxxx",
              "ISO 8601 date and time + timezone (e.g. 2022-06-30T16:20:34+00:00)"
            ],
            [
              "yyyy-MM-dd'T'HH:mm:ss'Z'",
              "ISO 8601 date and time in UTC (e.g. 2022-06-30T16:20:34Z)"
            ],
            [
              "yyyy-MM-dd",
              "ISO 8601 date without time (e.g. 2022-06-30)"
            ],
            [
              "dd/MM/yyyy",
              "date/month/year (e.g. 30/06/2022)"
            ],
            [
              "MM/dd/yyyy",
              "month/date/year (e.g. 06/30/2022)"
            ],
            [
              "yyyy/MM/dd",
              "year/month/date (e.g. 06/30/2022)"
            ],
            [
              "dd.MM.yyyy",
              "date.month.year (e.g. 30.06.2022)"
            ],
            [
              "dd MMM yyyy",
              "date month year (e.g. 30 Jun 2022)"
            ],
            [
              "HH:mm",
              "24-hour time (e.g. 16:20)"
            ],
            [
              "hh:mm",
              "12-hour time (e.g. 04:20 pm)"
            ]
          ]
        }
      },
      {
        "name": "original locale",
        "type": "text",
        "description": "The language locale to be used when parsing the original values.\nSee https://date-fns.org/v2.0.1/docs/I18n#supported-languages for a list of supported languages.\nIf unspecified, `locale` defaults to `en-US`.",
        "required": false,
        "default": "en-US",
        "ui": {
          "must-be-one-of": [
            "af",
            "ar",
            "ar-DZ",
            "ar-EG",
            "ar-MA",
            "ar-SA",
            "ar-TN",
            "az",
            "be",
            "bg",
            "bn",
            "bs",
            "ca",
            "cs",
            "cy",
            "da",
            "de",
            "de-AT",
            "el",
            "en-AU",
            "en-CA",
            "en-GB",
            "en-IE",
            "en-IN",
            "en-NZ",
            "en-US",
            "en-ZA",
            "eo",
            "es",
            "et",
            "eu",
            "fa-IR",
            "fi",
            "fr",
            "fr-CA",
            "fr-CH",
            "fy",
            "gd",
            "gl",
            "gu",
            "he",
            "hi",
            "hr",
            "ht",
            "hu",
            "hy",
            "id",
            "is",
            "it",
            "ja",
            "ja-Hira",
            "ka",
            "kk",
            "km",
            "kn",
            "ko",
            "lb",
            "lt",
            "lv",
            "mk",
            "mn",
            "ms",
            "mt",
            "nb",
            "nl",
            "nl-BE",
            "nn",
            "pl",
            "pt",
            "pt-BR",
            "ro",
            "ru",
            "sk",
            "sl",
            "sq",
            "sr",
            "sr-Latn",
            "sv",
            "ta",
            "te",
            "th",
            "tr",
            "ug",
            "uk",
            "uz",
            "uz-Cyrl",
            "vi",
            "zh-CN",
            "zh-HK",
            "zh-TW"
          ]
        }
      },
      {
        "name": "new format",
        "type": "text",
        "description": "The format tokens, of the new values, based on Unicode Technical Standard #35.\nSee: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table.\nIf unspecified, defaults to ISO 8601 date/time.",
        "required": false,
        "default": "yyyy-MM-dd'T'HH:mm:ssxxx"
      },
      {
        "name": "new locale",
        "type": "text",
        "description": "The language locale to be used when formatting the new values.\nSee https://date-fns.org/v2.0.1/docs/I18n#supported-languages for a list of supported languages.\nIf unspecified, `locale` defaults to `en-US`.",
        "required": false,
        "default": "en-US",
        "ui": {
          "must-be-one-of": [
            "af",
            "ar",
            "ar-DZ",
            "ar-EG",
            "ar-MA",
            "ar-SA",
            "ar-TN",
            "az",
            "be",
            "bg",
            "bn",
            "bs",
            "ca",
            "cs",
            "cy",
            "da",
            "de",
            "de-AT",
            "el",
            "en-AU",
            "en-CA",
            "en-GB",
            "en-IE",
            "en-IN",
            "en-NZ",
            "en-US",
            "en-ZA",
            "eo",
            "es",
            "et",
            "eu",
            "fa-IR",
            "fi",
            "fr",
            "fr-CA",
            "fr-CH",
            "fy",
            "gd",
            "gl",
            "gu",
            "he",
            "hi",
            "hr",
            "ht",
            "hu",
            "hy",
            "id",
            "is",
            "it",
            "ja",
            "ja-Hira",
            "ka",
            "kk",
            "km",
            "kn",
            "ko",
            "lb",
            "lt",
            "lv",
            "mk",
            "mn",
            "ms",
            "mt",
            "nb",
            "nl",
            "nl-BE",
            "nn",
            "pl",
            "pt",
            "pt-BR",
            "ro",
            "ru",
            "sk",
            "sl",
            "sq",
            "sr",
            "sr-Latn",
            "sv",
            "ta",
            "te",
            "th",
            "tr",
            "ug",
            "uk",
            "uz",
            "uz-Cyrl",
            "vi",
            "zh-CN",
            "zh-HK",
            "zh-TW"
          ]
        }
      },
      {
        "name": "new column name",
        "type": "text",
        "description": "The name of the column to which the new values will be added.\nIf unspecified, the new values will added to the original column (specified by `original column name`), overwriting the original values.",
        "required": false,
        "ui": {
          "column-not-in": "data"
        }
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with formatted values."
      }
    ],
    "name": "format-date-column"
  },
  "forward-geocoding": {
    "description": "Converts location names in a datatable column to latitude & longitude.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the column to be converted.",
        "required": true
      },
      {
        "name": "location column",
        "type": "text",
        "description": "The name of the column containing location names.",
        "required": true
      },
      {
        "name": "latitude column",
        "type": "text",
        "description": "The column name for the latitude result.\nIf unspecified, defaults to \"latitude\".",
        "required": false,
        "default": "latitude"
      },
      {
        "name": "longitude column",
        "type": "text",
        "description": "The column name for the longitude result.\nIf unspecified, defaults to \"longitude\".",
        "required": false,
        "default": "longitude"
      },
      {
        "name": "geographic area",
        "type": "text",
        "description": "Search within a geographic area. This is a hard filter. Results will be returned if they are located within the specified area. A geographic area can be a country (or multiple countries), provided as comma-separated [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country codes in all uppercase. For example, CAN,MEX,USA.",
        "required": false
      },
      {
        "name": "digits",
        "type": "number",
        "description": "The number of digits to appear after the decimal point; should be a value between 0 and 6, inclusive.\nIf unspecified, it defaults to 6.",
        "required": false,
        "default": 6
      },
      {
        "name": "type column",
        "type": "text",
        "description": "The name of the column to hold the match type (either `building`, `road`, `hamlet`, `village`, `neighbourhood`, `city`, `county`, `postcode`, `partial_postcode`, `terminated_postcode`, `postal_city`, `state_district`, `state`, `region`, `island`, `body_of_water`, `country`, `continent`, `fictitious`, or `unknown`).\nIf unspecified, the type column will not be added.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the latitude & longitude values added."
      }
    ],
    "name": "forward-geocoding"
  },
  "import-file-from-dropbox": {
    "description": "Imports a file from Dropbox.",
    "group": "Data Sources",
    "input": [
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the Dropbox file to be imported.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "The imported file."
      }
    ],
    "name": "import-file-from-dropbox"
  },
  "import-file-from-figshare": {
    "description": "Imports a file from Figshare (https://figshare.com).",
    "group": "Data Sources",
    "input": [
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the Figshare file to be imported (e.g. https://figshare.com/articles/Tree/4080564).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "The imported file."
      }
    ],
    "name": "import-file-from-figshare"
  },
  "import-file-from-google-drive": {
    "description": "Imports a file from Google Drive.",
    "group": "Data Sources",
    "input": [
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the file to be imported.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "The imported file."
      }
    ],
    "name": "import-file-from-google-drive"
  },
  "import-file-from-s3": {
    "description": "Imports a file from an Amazon S3 compatible object storage server.",
    "group": "Data Sources",
    "input": [
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the file to be imported, e.g. `https://bucket-name.s3.example.com/file/path`.",
        "required": true
      },
      {
        "name": "access key",
        "type": "text",
        "description": "The access key is the user-id that uniquely identifies your account.\nRequired when the ACL of the object is private.",
        "required": false
      },
      {
        "name": "secret key",
        "type": "text",
        "description": "The secret key is the password to your account.\nRequired when the ACL of the object is private.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "The downloaded file."
      }
    ],
    "name": "import-file-from-s3"
  },
  "import-file-from-smb-share": {
    "description": "Imports a file from a shared network drive using standard SMB/CIFS protocol.",
    "group": "Data Sources",
    "input": [
      {
        "name": "share address",
        "type": "text",
        "description": "The name of the service to which you want to connect.\nTakes the form of `\\\\server\\service`, `//server/service`, or `smb://server/service` where `server` is the host name or IP address of the SMB/CIFS server, and `service` is the name of the service offered by the server.",
        "required": true
      },
      {
        "name": "port",
        "type": "number",
        "description": "The port of the SMB server.\nIf unspecified, defaults to `445`.",
        "required": false,
        "default": 445
      },
      {
        "name": "domain",
        "type": "text",
        "description": "The domain on which the user is registered.\ne.g. `WORKGROUP`.",
        "required": false
      },
      {
        "name": "username",
        "type": "text",
        "description": "The username required to access the specified service on the server.\nIf unspecified, defaults to `guest`.",
        "required": false
      },
      {
        "name": "password",
        "type": "text",
        "description": "The password required to access the specified service on the server.",
        "required": false
      },
      {
        "name": "file path",
        "type": "text",
        "description": "The relative path (e.g. `folder\\file.txt`) or the absolute path (e.g. `\\\\server\\service\\folder\\file.txt`) of the file to be imported.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "The imported file."
      }
    ],
    "name": "import-file-from-smb-share"
  },
  "import-file-from-url": {
    "description": "Imports a file from the web.",
    "group": "Data Sources",
    "input": [
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the file to be imported.",
        "required": true
      },
      {
        "name": "output file name",
        "type": "text",
        "description": "The name of the output file.\nIf unspecified, defaults to the remote file name.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "file",
        "type": "file",
        "description": "The imported file."
      }
    ],
    "name": "import-file-from-url"
  },
  "import-from-csv-file": {
    "description": "Imports a CSV file and converts to a datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "file",
        "type": "file",
        "description": "A file containing [Comma-separated values](https://en.wikipedia.org/wiki/Comma-separated_values) or delimited text.",
        "required": true
      },
      {
        "name": "encoding",
        "type": "text",
        "description": "The character encoding of the input `file`.\nIf unspecified, defaults to `utf8`.",
        "required": false,
        "default": "utf8",
        "ui": {
          "must-be-one-of": [
            "ascii",
            "base64",
            "binary",
            "hex",
            "ucs2",
            "utf8",
            "latin1"
          ]
        }
      },
      {
        "name": "delimiter",
        "type": "text",
        "description": "Character used as column delimiter. Defaults to \",\" (comma).",
        "required": false,
        "ui": {
          "can-be-one-of": [
            [
              ",",
              "Comma (`,`)"
            ],
            [
              ";",
              "Semicolon (`;`)"
            ],
            [
              ":",
              "Colon (`:`)"
            ],
            [
              "|",
              "Vertical bar (``)"
            ],
            [
              "\\u0020",
              "Space"
            ],
            [
              "\\u0009",
              "tab"
            ]
          ]
        },
        "default": ","
      },
      {
        "name": "newline",
        "type": "text",
        "description": "Character used as line separator.\nIf unspecified, defaults to `\\n` (newline).",
        "required": false,
        "default": "\n",
        "ui": {
          "can-be-one-of": [
            [
              "\n",
              "Newline (\\n)"
            ],
            [
              "\r\n",
              "CRLF (\\r\\n)"
            ],
            [
              ",",
              "Comma (`,`)"
            ],
            [
              ";",
              "Semicolon (`;`)"
            ],
            [
              "\\u0020",
              "Space"
            ],
            [
              "\\u0009",
              "tab"
            ]
          ]
        }
      },
      {
        "name": "trim",
        "type": "boolean",
        "description": "Specifies whether to ignore whitespace characters immediately around the separator.\nIf unspecified, defaults to True.",
        "required": false,
        "default": true
      },
      {
        "name": "column names",
        "type": "list",
        "description": "List of column names to be added. If unspecified, first row of the file will be used as column names.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-csv-file"
  },
  "import-from-dbf-file": {
    "description": "Reads data from a dBASE (`.dbf`) file.",
    "group": "Data Sources",
    "input": [
      {
        "name": "dbf",
        "type": "file",
        "description": "A dBASE (`.dbf`) file.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "Data read from the file."
      }
    ],
    "name": "import-from-dbf-file"
  },
  "import-from-epicollect-project": {
    "description": "Imports data from an Epicollect5 project.",
    "group": "Data Sources",
    "input": [
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the Epicollect5 project to be imported (e.g. https://five.epicollect.net/project/ec5-demo-project).",
        "required": true
      },
      {
        "name": "client id",
        "type": "text",
        "description": "The Epicollect5 Client ID to access private projects.\nNot required for public projects.\nSee https://docs.epicollect.net/developers/apps.",
        "required": false
      },
      {
        "name": "client secret",
        "type": "text",
        "description": "The Epicollect5 Client Secret to access private projects.\nNot required for public projects.\nSee https://docs.epicollect.net/developers/apps.",
        "required": false
      },
      {
        "name": "map index",
        "type": "text",
        "description": "The index of the mapping to use when importing the data. See https://docs.epicollect.net/web-application/mapping-data.\nIf unspecified, the default mapping is used.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the project entries."
      }
    ],
    "name": "import-from-epicollect-project"
  },
  "import-from-excel-file": {
    "description": "Imports data from a spreadsheet file.",
    "group": "Data Sources",
    "input": [
      {
        "name": "file",
        "type": "file",
        "description": "The spreadsheet file in one of the following file formats: `.xlsx`, `.xls`, `.xlsm`, `.xlsb`, `.ods`, `.fods`, `.sylk`, `.html`, `.dif`, `.dbf`, `.rtf`, `.prn`, and `.eth`.",
        "required": true
      },
      {
        "name": "sheetname",
        "type": "text",
        "description": "The name of the sheet (tab) from which to import the data.\nIf unspecified, the first sheet will be used.",
        "required": false
      },
      {
        "name": "range",
        "type": "text",
        "description": "A valid range of cells (e.g. `A1:L512`) that contain data.\nIf unspecified, the whole sheet will be included.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-excel-file"
  },
  "import-from-google-sheet": {
    "description": "Imports data from a Google Sheets spreadsheet.\nPrivate spreadsheets should be shared with `data-flo@data-flo.iam.gserviceaccount.com`.",
    "group": "Data Sources",
    "input": [
      {
        "name": "url",
        "type": "text",
        "description": "The URL of the Google Sheets spreadsheet.\nPrivate sheets should be shared with `data-flo@data-flo.iam.gserviceaccount.com`.",
        "required": true
      },
      {
        "name": "sheet name",
        "type": "text",
        "description": "The title of the sheet (tab) from which data will be imported.\nIf unspecified, the first sheet in the spreadsheet will be used.",
        "required": false
      },
      {
        "name": "range",
        "type": "text",
        "description": "A valid range of cells (e.g. `A1:L512`) that contain data.\nIf unspecified, the whole sheet will be included.",
        "required": false
      },
      {
        "name": "skip",
        "type": "list",
        "description": "A list of row numbers to be ignored.\nIf unspecified, then all rows in the range will be imported.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-google-sheet"
  },
  "import-from-microreact-project": {
    "description": "Imports metadata table from a Microreact project.",
    "group": "Data Sources",
    "input": [
      {
        "name": "project",
        "type": "text",
        "description": "The URL of the Microreact project to be imported (e.g. https://microreact.org/project/Ny8H4gsH).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the project data rows."
      }
    ],
    "name": "import-from-microreact-project"
  },
  "import-from-mysql": {
    "description": "Imports data from a MySQL database.",
    "group": "Data Sources",
    "input": [
      {
        "name": "hostname",
        "type": "text",
        "description": "The hostname (.e.g `localhost`) or the IP address (e.g. `127.0.0.1`) of the database server.",
        "required": true
      },
      {
        "name": "port",
        "type": "number",
        "description": "The port of the database server.\nIf unspecified, defaults to `3306`.",
        "required": false,
        "default": 3306,
        "ui": {
          "integer": true
        }
      },
      {
        "name": "database",
        "type": "text",
        "description": "The name of the database.",
        "required": true
      },
      {
        "name": "username",
        "type": "text",
        "description": "The username to connect to the database.",
        "required": false
      },
      {
        "name": "password",
        "type": "text",
        "description": "The password to connect to the database.",
        "required": false
      },
      {
        "name": "query",
        "type": "text",
        "description": "The SQL query reading from the database (e.g. `SELECT * from table WHERE ...`).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-mysql"
  },
  "import-from-oracle": {
    "description": "Imports data from an Oracle Database and returns the results as a datatable.",
    "group": "Data Sources",
    "input": [
      {
        "name": "connection string",
        "type": "text",
        "description": "An Easy Connect string (e.g. hostname:port/service), a Connect Descriptor string, or the SID of a local Oracle Database instance.\nIf unspecified, defaults to `localhost:1521/XEPDB1`.",
        "required": true
      },
      {
        "name": "username",
        "type": "text",
        "description": "The username to connect to the database.",
        "required": false
      },
      {
        "name": "password",
        "type": "text",
        "description": "The password to connect to the database.",
        "required": false
      },
      {
        "name": "query",
        "type": "text",
        "description": "The SQL query reading from the database (e.g. `SELECT * from table WHERE ...`).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-oracle"
  },
  "import-from-postgres": {
    "description": "Imports data from a PostgreSQL database.",
    "group": "Data Sources",
    "input": [
      {
        "name": "hostname",
        "type": "text",
        "description": "The hostname (.e.g `localhost`) or the IP address (e.g. `127.0.0.1`) of the database server.",
        "required": true
      },
      {
        "name": "port",
        "type": "number",
        "description": "The port of the database server.\nIf unspecified, defaults to `5432`.",
        "required": false,
        "default": 5432,
        "ui": {
          "integer": true
        }
      },
      {
        "name": "database",
        "type": "text",
        "description": "The name of the database.",
        "required": true
      },
      {
        "name": "username",
        "type": "text",
        "description": "The username to connect to the database.",
        "required": false
      },
      {
        "name": "password",
        "type": "text",
        "description": "The password to connect to the database.",
        "required": false
      },
      {
        "name": "query",
        "type": "text",
        "description": "The SQL query reading from the database (e.g. `SELECT * from table WHERE ...`).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-postgres"
  },
  "import-from-spreadsheet-file": {
    "description": "Imports data from a spreadsheet file.",
    "group": "Data Sources",
    "input": [
      {
        "name": "file",
        "type": "file",
        "description": "The spreadsheet file in one of the following file formats: `.xlsx`, `.xls`, `.xlsm`, `.xlsb`, `.ods`, `.fods`, `.sylk`, `.html`, `.dif`, `.dbf`, `.rtf`, `.prn`, and `.eth`.",
        "required": true
      },
      {
        "name": "sheetname",
        "type": "text",
        "description": "The name of the sheet (tab) from which to import the data.\nIf unspecified, the first sheet will be used.",
        "required": false
      },
      {
        "name": "range",
        "type": "text",
        "description": "A valid range of cells (e.g. `A1:L512`) that contain data.\nIf unspecified, the whole sheet will be included.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-spreadsheet-file"
  },
  "import-from-sql-server": {
    "description": "Imports data from a Microsoft SQl Server database.",
    "group": "Data Sources",
    "input": [
      {
        "name": "hostname",
        "type": "text",
        "description": "The hostname (.e.g `localhost`) or the IP address (e.g. `127.0.0.1`) of the database server.",
        "required": true
      },
      {
        "name": "port",
        "type": "number",
        "description": "The port of the database server.\nIf unspecified, defaults to `1433`.",
        "required": false,
        "default": 1433,
        "ui": {
          "integer": true
        }
      },
      {
        "name": "database",
        "type": "text",
        "description": "The name of the database.",
        "required": true
      },
      {
        "name": "username",
        "type": "text",
        "description": "The username to connect to the database.",
        "required": false
      },
      {
        "name": "password",
        "type": "text",
        "description": "The password to connect to the database.",
        "required": false
      },
      {
        "name": "query",
        "type": "text",
        "description": "The SQL query reading from the database (e.g. `SELECT * from table WHERE ...`).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-sql-server"
  },
  "import-from-sqlite": {
    "description": "Imports data from a SQLite file.",
    "group": "Data Sources",
    "input": [
      {
        "name": "sqlite file",
        "type": "file",
        "description": "The SQLite file from which the data will be imported.",
        "required": true
      },
      {
        "name": "query",
        "type": "text",
        "description": "The SQL query reading from the database (e.g. `SELECT * from table WHERE ...`).",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the imported data."
      }
    ],
    "name": "import-from-sqlite"
  },
  "import-list-from-text-file": {
    "description": "Imports a list from a text file.",
    "group": "Data Tables",
    "input": [
      {
        "name": "file",
        "type": "file",
        "description": "The text file to be converted.",
        "required": true
      },
      {
        "name": "encoding",
        "type": "text",
        "description": "The character encoding of the input `file`.\nIf unspecified, defaults to `utf8`.",
        "required": false,
        "default": "utf8",
        "ui": {
          "must-be-one-of": [
            "ascii",
            "base64",
            "binary",
            "hex",
            "ucs2",
            "utf8",
            "latin1"
          ]
        }
      },
      {
        "name": "separator",
        "type": "text",
        "description": "Character used as line separator.\nIf unspecified, defaults to `\\n` (newline).",
        "required": false,
        "default": "\n",
        "ui": {
          "can-be-one-of": [
            [
              "\n",
              "Newline (\\n)"
            ],
            [
              "\r\n",
              "CRLF (\\r\\n)"
            ],
            [
              ",",
              "Comma (`,`)"
            ],
            [
              ";",
              "Semicolon (`;`)"
            ],
            [
              "\\u0020",
              "Space"
            ],
            [
              "\\u0009",
              "tab"
            ]
          ]
        }
      },
      {
        "name": "trim",
        "type": "boolean",
        "description": "Specifies whether to ignore whitespace characters immediately around the separator.\nDefaults to True.",
        "required": false,
        "default": true
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list of values."
      }
    ],
    "name": "import-list-from-text-file"
  },
  "join-datatables": {
    "description": "Joins two datatables based on a common column between them.",
    "group": "Data Tables",
    "input": [
      {
        "name": "main data",
        "type": "datatable",
        "description": "The main (left) datatable. When `inner join` is `False`, all rows from this datatable will be included.",
        "required": true
      },
      {
        "name": "main column",
        "type": "text",
        "description": "The column in `main data` containing values shared by `other column` in `other data`.",
        "required": true
      },
      {
        "name": "other data",
        "type": "datatable",
        "description": "The other (right) datatable, to be joined to main datatable.",
        "required": true
      },
      {
        "name": "other column",
        "type": "text",
        "description": "The column in `other data` containing values shared by `main column` in `main data`.\nIf more than one row match main column value, only the first matching row will be joined.\nIf unspecified, the name of `main column` will be used.",
        "required": false
      },
      {
        "name": "join type",
        "type": "text",
        "description": "Specifies the joining method\n See https://www.datasciencemadesimple.com/join-in-r-merge-in-r/.\nIf unspecified, defaults to `Left Join`.",
        "required": false,
        "default": "Left Join",
        "ui": {
          "must-be-one-of": [
            [
              "Left Join",
              "All rows from `main data` will be included, along with matching rows from `other data`"
            ],
            [
              "Inner Join",
              "Rows from `main data` that do not have matches in `other data` will be excluded"
            ],
            [
              "Full Join",
              "All rows from `main data` and `other data` will be included"
            ]
          ]
        }
      },
      {
        "name": "case sensitive",
        "type": "boolean",
        "description": "When set to `False`, lowercase and uppercase letters are treated as equivalent when matching values.\nIf unspecified, defaults to `False`.",
        "required": false,
        "default": false
      },
      {
        "name": "columns",
        "type": "list",
        "description": "Specifies which columns of `other data` to include in the output datatable.\nIf unassigned, all columns in `other data` will be included.",
        "required": false
      },
      {
        "name": "prefix",
        "type": "text",
        "description": "An optional text to be prepended to `other data` column names in the output datatable.\nIf unspecified, column names remain unchanged.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing joined rows and columns."
      },
      {
        "name": "unmatched",
        "type": "datatable",
        "description": "A datatable containing `main data` rows which do not have a match in `other data`."
      }
    ],
    "name": "join-datatables"
  },
  "list-datatable-columns": {
    "description": "Creates a list of datatable column names.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing columns to be listed.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "column names",
        "type": "list",
        "description": "The list of column names."
      }
    ],
    "name": "list-datatable-columns"
  },
  "list-newick-leaf-labels": {
    "description": "Gets the leaf labels from a Newick tree.",
    "group": "Text Manipulation",
    "input": [
      {
        "name": "newick",
        "type": "text",
        "description": "A tree in Newick format.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "labels",
        "type": "list",
        "description": "A list of leaf labels."
      }
    ],
    "name": "list-newick-leaf-labels"
  },
  "map-column-values": {
    "description": "Adds a new column to a datatable by mapping values of an existing column.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The columns and rows.",
        "required": true
      },
      {
        "name": "original column",
        "type": "text",
        "description": "The name of an existing column containing values to be mapped.",
        "required": true
      },
      {
        "name": "values",
        "type": "map",
        "description": "The map of existing values with new values, where the map keys are the existing values in original column, and the map values are the corresponding values to be written to new column.",
        "required": true
      },
      {
        "name": "new column",
        "type": "text",
        "description": "The name of the new column to which the mapped values will be written.\nIf unspecified, mapped values will be written to the original column.",
        "required": false
      },
      {
        "name": "case sensitive",
        "type": "boolean",
        "description": "Whether lowercase and uppercase letters should be treated as equivalent.\nDefaults to `False` (lowercase and uppercase letters are treated as equivalent).",
        "required": false,
        "default": false
      },
      {
        "name": "unmapped values",
        "type": "text",
        "description": "Specifies what values to write in new column when original column values are not included as map keys.\nIf unspecified, defaults to `Replace original value with blank`.",
        "required": false,
        "default": "blank",
        "ui": {
          "must-be-one-of": [
            [
              "blank",
              "Replace original value with blank"
            ],
            [
              "include",
              "Keep original value"
            ]
          ]
        }
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing mapped values in `new column`."
      }
    ],
    "name": "map-column-values"
  },
  "prepend-to-list": {
    "description": "Adds a text value to the end of a list.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list to which the value will be prepended.",
        "required": true
      },
      {
        "name": "value",
        "type": "text",
        "description": "The value to be prepended to the list.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list with the value prepended."
      }
    ],
    "name": "prepend-to-list"
  },
  "remove-columns": {
    "description": "Removes specified columns from a datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the columns to be removed.",
        "required": true
      },
      {
        "name": "columns",
        "type": "list",
        "description": "The list of columns to be removed.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the specified columns removed."
      }
    ],
    "name": "remove-columns"
  },
  "remove-duplicate-list-values": {
    "description": "Removes duplicate values in a list.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list containing duplicate values to be removed.",
        "required": true
      },
      {
        "name": "case sensitive",
        "type": "boolean",
        "description": "When set to `True`, lowercase and uppercase letters are treated as different. When set to `False`, lowercase and uppercase letters are treated as equivalent.\nIf unspecified, defaults to `False`",
        "required": false,
        "default": false
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list containing unique values."
      },
      {
        "name": "duplicates",
        "type": "list",
        "description": "A list containing duplicate values."
      }
    ],
    "name": "remove-duplicate-list-values"
  },
  "remove-duplicate-rows": {
    "description": "Removes duplicate rows from a datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing duplicate rows.",
        "required": true
      },
      {
        "name": "column names",
        "type": "list",
        "description": "A list of columns to compare for duplicate values.\nIf unspecified, entire rows will be compared.",
        "required": false
      },
      {
        "name": "case sensitive",
        "type": "boolean",
        "description": "When set to `True`, lowercase and uppercase letters are treated as different. When set to `False`, lowercase and uppercase letters are treated as equivalent.\nIf unspecified, defaults to `False`",
        "required": false,
        "default": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing only unique rows, including first instance of duplicate rows."
      },
      {
        "name": "duplicates",
        "type": "datatable",
        "description": "A datatable containing duplicate rows."
      }
    ],
    "name": "remove-duplicate-rows"
  },
  "rename-columns": {
    "description": "Renames existing columns in a datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing columns to be renamed.",
        "required": true
      },
      {
        "name": "column names",
        "type": "map",
        "description": "The mapping of old column names to new ones.",
        "required": true,
        "ui": {
          "keys": {
            "column-in": "data"
          }
        }
      },
      {
        "name": "discard unmapped",
        "type": "boolean",
        "description": "Specifies whether to discard columns which are not mapped in `column names`. \nIf unspecified, defaults to `False` (unmapped columns are kept).",
        "required": false,
        "default": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the columns renamed."
      }
    ],
    "name": "rename-columns"
  },
  "replace-blank-values": {
    "description": "Replaces blank values in a datatable column.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing blank values.",
        "required": true
      },
      {
        "name": "columns",
        "type": "list",
        "description": "The names of the columns in `data` containing blank values.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "new value",
        "type": "text",
        "description": "A value to replace blank values.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the blank values replaced."
      }
    ],
    "name": "replace-blank-values"
  },
  "replace-values-in-columns": {
    "description": "Replaces all instances of a pattern in one or more columns in a datatable. The replacement values can be written to the original columns or new columns.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing values to be replaced.",
        "required": true
      },
      {
        "name": "columns",
        "type": "map",
        "description": "A map of existing column names with names of new columns, where the map keys are the names of existing columns, and the map values are the names of the columns to which the replacement values are written.\nIf a map value is left blank, the replacement values are written to the original column.",
        "required": true
      },
      {
        "name": "pattern",
        "type": "text",
        "description": "The text or regular expression to be replaced.\nThe pattern is treated as a regular expression if it begins and ends with `/` (e.g. `/.*/`).",
        "required": true
      },
      {
        "name": "replacement",
        "type": "text",
        "description": "The text that replaces all instances of the `pattern`.\nIf unspecified, matches will be replaced with a blank text.\nIf a regular expression was used as a pattern, capture groups can be included as `$1`, `$2`, etc.",
        "required": false,
        "default": ""
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with replacement values written to the original columns or new columns."
      }
    ],
    "name": "replace-values-in-columns"
  },
  "replace-values-in-list": {
    "description": "Replaces all instances of a pattern in list values with a specified replacement text.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list of text values.",
        "required": true
      },
      {
        "name": "pattern",
        "type": "text",
        "description": "The text or regular expression to be replaced.\nThe pattern is treated as a regular expression if it begins and ends with `/` (e.g. `/.*/`).",
        "required": true
      },
      {
        "name": "replacement",
        "type": "text",
        "description": "The text that replaces all instances of the `pattern`.\nIf unspecified, matches will be replaced with a blank text.\nIf a regular expression was used as a pattern, capture groups can be included as `$1`, `$2`, etc.",
        "required": false,
        "default": ""
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "The list of modified elements"
      }
    ],
    "name": "replace-values-in-list"
  },
  "replace-values-in-text": {
    "description": "Replaces all instances of a pattern in a text with a specified replacement text.",
    "group": "Text Manipulation",
    "input": [
      {
        "name": "text",
        "type": "text",
        "description": "The text containing values to be replaced.",
        "required": true
      },
      {
        "name": "pattern",
        "type": "text",
        "description": "The text or regular expression to be replaced.\nThe pattern is treated as a regular expression if it begins and ends with `/` (e.g. `/.*/`).",
        "required": true
      },
      {
        "name": "replacement",
        "type": "text",
        "description": "The text that replaces all instances of the `pattern`.\nIf unspecified, matches will be replaced with a blank text.\nIf a regular expression is used as a pattern, capture groups can be included as `$` followed by the number of the group (e.g. `$1` for the value of the first group).",
        "required": false,
        "default": ""
      }
    ],
    "output": [
      {
        "name": "text",
        "type": "text",
        "description": "A modified text."
      }
    ],
    "name": "replace-values-in-text"
  },
  "reshape-long-to-wide": {
    "description": "Reshapes rows in long format to wide format.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable in long format.",
        "required": true
      },
      {
        "name": "key column name",
        "type": "text",
        "description": "The name of the column to which keys are added.\nIf unspecified, defaults to `key`.",
        "required": false,
        "default": "key"
      },
      {
        "name": "value column name",
        "type": "text",
        "description": "The name of the column to which values are added.\nIf unspecified, defaults to `value`.",
        "required": false,
        "default": "value"
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable in wide format."
      }
    ],
    "name": "reshape-long-to-wide"
  },
  "reshape-wide-to-long": {
    "description": "Reshapes rows in wide format to long format.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable in wide format.",
        "required": true
      },
      {
        "name": "static columns",
        "type": "list",
        "description": "The list of columns which will not be reshaped.\nIf unspecified, all columns will be reshaped",
        "required": false
      },
      {
        "name": "key column name",
        "type": "text",
        "description": "The name of the column to which keys are added.\nIf unspecified, defaults to `key`.",
        "required": false,
        "default": "key"
      },
      {
        "name": "value column name",
        "type": "text",
        "description": "The name of the column to which values are added.\nIf unspecified, defaults to `value`.",
        "required": false,
        "default": "value"
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable in long format."
      }
    ],
    "name": "reshape-wide-to-long"
  },
  "reverse-geocoding": {
    "description": "Converts latitude & longitude in datatable columns to location names.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the latitude & longitude columns to be converted.",
        "required": true
      },
      {
        "name": "latitude column",
        "type": "text",
        "default": "latitude",
        "description": "The name of the column containing latitude values (in decimal degrees).\nA number preceded by a sign character. A plus sign (+) denotes northern hemisphere, and a minus sign (-) denotes southern hemisphere.\nIf unspecified, defaults to `latitude`.",
        "required": true
      },
      {
        "name": "longitude column",
        "type": "text",
        "default": "longitude",
        "description": "The name of the column containing longitude values (in decimal degrees).\nA plus sign (+) denotes east longitude, and a minus sign (-) denotes west longitude.\nIf unspecified, defaults to `longitude`.",
        "required": true
      },
      {
        "name": "location type",
        "type": "text",
        "description": "The type of the geographic feature. Valid options are `country name`, `country code`, `postal code`, `state`, `county`, `city`, or `address`.\nDefaults to `address`.",
        "required": false,
        "default": "address"
      },
      {
        "name": "location column",
        "type": "text",
        "description": "The name of the column to contain location output.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "An object containing columns and rows."
      }
    ],
    "name": "reverse-geocoding"
  },
  "select-columns": {
    "description": "Selects a list of columns from a datatable in a specified order.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing columns to be selected.",
        "required": true
      },
      {
        "name": "column names",
        "type": "list",
        "description": "The list of columns to be included in the specified order.",
        "required": false,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "pattern",
        "type": "text",
        "description": "Specifies the pattern (a text or a regular expression) to select columns whose name matches that pattern.\nMatching columns will be added after any columns specified in `column names`, and in the order in which they appear in the original datatable.\nThe pattern is treated as a regular expression if it begins and ends with `/` (e.g. /.*/).",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the selected columns."
      }
    ],
    "name": "select-columns"
  },
  "select-list-values": {
    "description": "Selects values, based on position, from a list.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list containing the values to be selected."
      },
      {
        "name": "begin",
        "type": "number",
        "description": "The position of the first value to be selected.\nA negative number can be used to count from the end of the list (e.g. `-5` would start at the fifth-to-last value).\nIf unspecified, defaults to `1` (first value in list).",
        "default": 1
      },
      {
        "name": "end",
        "type": "number",
        "description": "The position of the last value to be selected.\nA negative number can be used to count from the end of the list.\nIf unspecified, defaults to `-1` (last value in list).",
        "default": -1
      },
      {
        "name": "limit",
        "type": "number",
        "description": "A positive number specifying a limit on the number of values to be selected.\nIf unspecified, no limit will be applied.",
        "default": null
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list containing the selected values."
      }
    ],
    "name": "select-list-values"
  },
  "select-rows": {
    "description": "Selects rows, based on position, from a datatable.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the rows to be selected.",
        "required": true
      },
      {
        "name": "begin",
        "type": "number",
        "description": "The position of the first row to be selected.\nA negative number can be used to count from the end of the datatable (e.g. `-5` would start at the fifth-to-last row).\nIf unspecified, defaults to `1` (first row of data).",
        "default": 1,
        "required": false
      },
      {
        "name": "end",
        "type": "number",
        "description": "The position of the last row to be selected.\nA negative number can be used to count from the end of the datatable.\nIf unspecified, defaults to `-1` (last row of data).",
        "default": -1,
        "required": false
      },
      {
        "name": "limit",
        "type": "number",
        "description": "A positive number specifying a limit on the number of rows to be selected.\nIf unspecified, no limit will be applied.",
        "required": false
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable containing the selected rows."
      }
    ],
    "name": "select-rows"
  },
  "send-email-message": {
    "description": "Sends an email message via a SMTP server.",
    "group": "Data Destinations",
    "input": [
      {
        "name": "stmp host",
        "type": "text",
        "description": "The hostname or IP address of the SMTP server."
      },
      {
        "name": "stmp port",
        "type": "number",
        "description": "The port of the SMTP server."
      },
      {
        "name": "stmp username",
        "type": "text",
        "description": "The username of the SMTP account."
      },
      {
        "name": "stmp password",
        "type": "text",
        "description": "The password of the SMTP account."
      },
      {
        "name": "stmp secure",
        "type": "boolean",
        "description": "When set to `True`, the connection to the server will use TLS protocol."
      },
      {
        "name": "from address",
        "type": "text",
        "description": "The email address of the sender.\nCan be plain `sender@example.com` or formatted `\"Sender Name\" sender@example.com`."
      },
      {
        "name": "to address",
        "type": "text",
        "description": "Comma separated list or an array of recipients email addresses.\nCan be plain `recipient@example.com` or formatted `\"recipient Name\" recipient@example.com`."
      },
      {
        "name": "subject",
        "type": "text",
        "description": "The subject of the email."
      },
      {
        "name": "text",
        "type": "text",
        "description": "The plaintext version of the message."
      }
    ],
    "output": [
      {
        "name": "message id",
        "type": "text",
        "description": "The final Message-Id value returned by the SMTP server."
      },
      {
        "name": "status code",
        "type": "text",
        "description": "Includes the last SMTP response from the server."
      }
    ],
    "name": "send-email-message"
  },
  "sort-datatable": {
    "description": "Sorts a datatable by one or more columns.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable to be sorted.",
        "required": true
      },
      {
        "name": "column names",
        "type": "map",
        "description": "A map of column names with sort direction, where the keys are the column names, and the values should be either `asc` (for ascending order) or `desc` (for descending order).",
        "required": true,
        "ui": {
          "keys": {
            "column-in": "data"
          },
          "values": {
            "must-be-one-of": [
              [
                "asc",
                "Ascending order"
              ],
              [
                "desc",
                "Descending order"
              ]
            ]
          }
        }
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with the sorted rows."
      }
    ],
    "name": "sort-datatable"
  },
  "sort-list": {
    "description": "Sorts values in a list.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list to be sorted.",
        "required": true
      },
      {
        "name": "sort direction",
        "type": "text",
        "description": "Specifies the sort direction, should be either `asc` (for ascending order) or `desc` (for descending order).",
        "required": false,
        "default": "asc",
        "ui": {
          "must-be-one-of": [
            [
              "asc",
              "Ascending order"
            ],
            [
              "desc",
              "Descending order"
            ]
          ]
        }
      }
    ],
    "output": [
      {
        "name": "list",
        "type": "list",
        "description": "A list containing the sorted values."
      }
    ],
    "name": "sort-list"
  },
  "split-column": {
    "description": "Splits values in a column into a specified number of columns using a separator to determine where to make each split.",
    "group": "Data Tables",
    "input": [
      {
        "name": "data",
        "type": "datatable",
        "description": "The datatable containing the column to be split.",
        "required": true
      },
      {
        "name": "column name",
        "type": "text",
        "description": "The name of the column to be split.",
        "required": true,
        "ui": {
          "column-in": "data"
        }
      },
      {
        "name": "separator",
        "type": "text",
        "description": "The separator text, or regular expression, which denotes the points at which each split should occur.\nThe separator is treated a regular expression if it begins and ends with `/`.",
        "required": true
      },
      {
        "name": "new column names",
        "type": "list",
        "description": "The list of columns to be added.",
        "required": true
      }
    ],
    "output": [
      {
        "name": "data",
        "type": "datatable",
        "description": "A datatable with new columns added."
      }
    ],
    "name": "split-column"
  },
  "split-list": {
    "description": "Splits a list into two lists at the first instance of a specified separator value.",
    "group": "List Manipulation",
    "input": [
      {
        "name": "list",
        "type": "list",
        "description": "The list to be split."
      },
      {
        "name": "separator",
        "type": "text",
        "description": "The value at which the list is split."
      },
      {
        "name": "append",
        "type": "boolean",
        "default": false,
        "description": "Whether to append the separator value to the first list.\nIf unspecified, defaults to `False`."
      },
      {
        "name": "prepend",
        "type": "boolean",
        "default": false,
        "description": "Whether to prepend the separator value to the second list.\nIf unspecified, defaults to `False`."
      }
    ],
    "output": [
      {
        "name": "first",
        "type": "list",
        "description": "A list containing the values before the separator value."
      },
      {
        "name": "second",
        "type": "list",
        "description": "A list containing the values after the separator value."
      }
    ],
    "name": "split-list"
  }
}